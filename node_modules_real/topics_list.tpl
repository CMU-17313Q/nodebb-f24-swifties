<ul component="category" class="topics-list list-unstyled" itemscope itemtype="http://www.schema.org/ItemList" data-nextstart="{nextStart}" data-set="{set}">

    {{{ each topics }}}
    <li component="category/topic" class="category-item hover-parent border-bottom py-3 py-lg-4 d-flex flex-column flex-lg-row align-items-start {function.generateTopicClass}" <!-- IMPORT partials/data/category.tpl -->>
        <link itemprop="url" content="{config.relative_path}/topic/{./slug}" />
        <meta itemprop="name" content="{function.stripTags, ./title}" />
        <meta itemprop="itemListOrder" content="descending" />
        <meta itemprop="position" content="{increment(./index, "1")}" />
        <a id="{./index}" data-index="{./index}" component="topic/anchor"></a>

        <div class="d-flex p-0 col-12 col-lg-7 gap-2 gap-lg-3 pe-1 align-items-start {{{ if config.theme.mobileTopicTeasers }}}mb-2 mb-lg-0{{{ end }}}">
            <div class="flex-shrink-0 position-relative">
                <a class="text-decoration-none" href="{{{ if ./user.userslug }}}{config.relative_path}/user/{./user.userslug}{{{ else }}}#{{{ end }}}">
                    {buildAvatar(./user, "40px", true, "avatar avatar-tooltip")}
                </a>
                {{{ if showSelect }}}
                <div class="checkbox position-absolute top-100 start-50 translate-middle-x pt-2 m-0 d-none d-lg-flex" style="max-width:max-content">
                    <i component="topic/select" class="fa text-muted pointer fa-square-o p-1 hover-visible"></i>
                </div>
                {{{ end }}}
            </div>
            <div class="flex-grow-1 d-flex flex-wrap gap-1 position-relative">
                <h3 component="topic/header" class="title text-break fs-5 fw-semibold m-0 tracking-tight w-100 {{{ if showSelect }}}me-4 me-lg-0{{{ end }}}">
                    <a class="text-reset" href="{{{ if topics.noAnchor }}}#{{{ else }}}{config.relative_path}/topic/{./slug}{{{ if ./bookmark }}}/{./bookmark}{{{ end }}}{{{ end }}}">{./title}</a>
                </h3>
                <span component="topic/labels" class="d-flex flex-wrap gap-1 w-100">
                    <span component="topic/watched" class="badge border border-gray-300 text-body {{{ if !./followed }}}hidden{{{ end }}}">
                        <i class="fa fa-bell-o"></i>
                        <span>[[topic:watching]]</span>
                    </span>
                    <span component="topic/ignored" class="badge border border-gray-300 text-body {{{ if !./ignored }}}hidden{{{ end }}}">
                        <i class="fa fa-eye-slash"></i>
                        <span>[[topic:ignoring]]</span>
                    </span>
                    <span component="topic/scheduled" class="badge border border-gray-300 text-body {{{ if !./scheduled }}}hidden{{{ end }}}">
                        <i class="fa fa-clock-o"></i>
                        <span>[[topic:scheduled]]</span>
                    </span>
                    <span component="topic/pinned" class="badge border border-gray-300 text-body {{{ if (./scheduled || !./pinned) }}}hidden{{{ end }}}">
                        <i class="fa fa-thumb-tack"></i>
                        <span>{{{ if !./pinExpiry }}}[[topic:pinned]]{{{ else }}}[[topic:pinned-with-expiry, {isoTimeToLocaleString(./pinExpiryISO, config.userLang)}]]{{{ end }}}</span>
                    </span>
                    <span component="topic/locked" class="badge border border-gray-300 text-body {{{ if !./locked }}}hidden{{{ end }}}">
                        <i class="fa fa-lock"></i>
                        <span>[[topic:locked]]</span>
                    </span>
                    <span component="topic/moved" class="badge border border-gray-300 text-body {{{ if !./oldCid }}}hidden{{{ end }}}">
                        <i class="fa fa-arrow-circle-right"></i>
                        <span>[[topic:moved]]</span>
                    </span>
                    {{{ each ./icons }}}<span class="lh-1">{@value}</span>{{{ end }}}

                    {{{ if !template.category }}}
                    {function.buildCategoryLabel, ./category, "a", "border"}
                    {{{ end }}}

                    <span data-tid="{./tid}" component="topic/tags" class="lh-1 tag-list hidden-xs d-flex flex-wrap gap-1 {{{ if !./tags.length }}}hidden{{{ end }}}">
                        {{{ each ./tags }}}
                        <a href="{config.relative_path}/tags/{./valueEncoded}"><span class="badge border border-gray-300 fw-normal tag tag-class-{./class}" data-tag="{./value}">{./valueEscaped}</span></a>
                        {{{ end }}}
                    </span>

                    <div class="d-flex gap-1 d-block d-lg-none w-100">
                        <span class="badge text-body border stats text-xs text-muted">
                            <i class="fa-regular fa-fw fa-message"></i>
                            <span component="topic/post-count" class="fw-normal">{humanReadableNumber(./postcount, 0)}</span>
                        </span>

                        <a href="{config.relative_path}/topic/{./slug}{{{ if (./teaser.timestampISO && !config.theme.mobileTopicTeasers) }}}/{./teaser.index}{{{ end }}}" class="border badge bg-transparent text-muted fw-normal timeago" title="{{{ if (./teaser.timestampISO && !config.theme.mobileTopicTeasers) }}}{./teaser.timestampISO}{{{ else }}}{./timestampISO}{{{ end }}}"></a>
                    </div>

                    <a href="{config.relative_path}/topic/{./slug}" class="d-none d-lg-block badge bg-transparent text-muted fw-normal timeago" title="{./timestampISO}"></a>
                </span>

                <!-- Share Post to Chat Button -->
                <div class="mt-2">
                    <button type="button" class="btn btn-secondary" data-tid="{./tid}" component="topic/share-to-chat">
                        <i class="fa fa-share"></i> Share Post to Chat
                    </button>
                </div>

                {{{ if showSelect }}}
                <div class="checkbox position-absolute top-0 end-0 m-0 d-flex d-lg-none" style="max-width:max-content">
                    <i component="topic/select" class="fa fa-square-o text-muted pointer p-1"></i>
                </div>
                {{{ end }}}
            </div>
            {{{ if ./thumbs.length }}}
            <a class="topic-thumbs position-relative text-decoration-none flex-shrink-0 d-none d-xl-block" href="{config.relative_path}/topic/{./slug}{{{ if ./bookmark }}}/{./bookmark}{{{ end }}}" aria-label="[[topic:thumb-image]]">
                <img class="topic-thumb rounded-1 bg-light" style="width:auto;max-width: 5.33rem;height: 3.33rem;object-fit: contain;" src="{./thumbs.0.url}" alt=""/>
                <span data-numthumbs="{./thumbs.length}" class="px-1 position-absolute top-0 start-100 translate-middle badge rounded text-bg-info" style="z-index: 1;">+{increment(./thumbs.length, "-1")}</span>
            </a>
            {{{ end }}}
        </div>

        <div class="d-flex p-0 col-lg-5 col-12 align-content-stretch">
            <div class="meta stats d-none d-lg-grid col-6 gap-1 pe-2 text-muted" style="grid-template-columns: 1fr 1fr 1fr;">
                {{{ if !reputation:disabled }}}
                <div class="stats-votes card card-header border-0 p-2 overflow-hidden rounded-1 d-flex flex-column align-items-center">
                    <span class="fs-5 ff-secondary lh-1" title="{./votes}">{humanReadableNumber(./votes, 0)}</span>
                    <span class="d-none d-xl-flex text-lowercase text-xs">[[global:votes]]</span>
                    <i class="d-xl-none fa fa-fw text-xs text-muted opacity-75 fa-chevron-up"></i>
                </div>
                {{{ end }}}
                <div class="stats-postcount card card-header border-0 p-2 overflow-hidden rounded-1 d-flex flex-column align-items-center">
                    <span class="fs-5 ff-secondary lh-1" title="{./postcount}">{humanReadableNumber(./postcount, 0)}</span>
                    <span class="d-none d-xl-flex text-lowercase text-xs">[[global:posts]]</span>
                    <i class="d-xl-none fa-regular fa-fw text-xs text-muted opacity-75 fa-message"></i>
                </div>
                <div class="stats-viewcount card card-header border-0 p-2 overflow-hidden rounded-1 d-flex flex-column align-items-center">
                    <span class="fs-5 ff-secondary lh-1" title="{./viewcount}">{humanReadableNumber(./viewcount, 0)}</span>
                    <span class="d-none d-xl-flex text-lowercase text-xs">[[global:views]]</span>
                    <i class="d-xl-none fa fa-fw text-xs text-muted opacity-75 fa-eye"></i>
                </div>
            </div>
            <div component="topic/teaser" class="meta teaser col-lg-6 col-12 {{{ if !config.theme.mobileTopicTeasers }}}d-none d-lg-block{{{ end }}}">
                <div class="lastpost border-start border-2 lh-sm h-100 d-flex flex-column gap-1" style="border-color: {./category.bgColor}!important;">
                    {{{ if ./unreplied }}}
                    <div class="ps-2 text-xs">
                        [[category:no-replies]]
                    </div>
                    {{{ else }}}
                    {{{ if ./teaser.pid }}}
                    <div class="ps-2">
                        <a href="{{{ if ./teaser.user.userslug }}}{config.relative_path}/user/{./teaser.user.userslug}{{{ else }}}#{{{ end }}}" class="text-decoration-none">{buildAvatar(./teaser.user, "18px", true, "avatar-tooltip not-responsive")}</a>
                        <a class="permalink text-muted timeago text-xs" href="{config.relative_path}/topic/{./slug}/{./teaser.index}" title="{./teaser.timestampISO}" aria-label="[[global:lastpost]]"></a>
                    </div>
                    <div class="post-content text-xs ps-2 line-clamp-sm-2 lh-sm text-break position-relative flex-fill">
                        <a class="stretched-link" tabindex="-1" href="{config.relative_path}/topic/{./slug}/{./teaser.index}" aria-label="[[global:lastpost]]"></a>
                        {./teaser.content}
                    </div>
                    {{{ end }}}
                    {{{ end }}}
                </div>
            </div>
        </div>
    </li>
    {{{ end }}}
</ul>
<!-- Share to Chat Modal (placed outside the loop) -->
<div class="modal fade" id="shareToChatModal" tabindex="-1" aria-labelledby="shareToChatModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="shareToChatModalLabel">Share Post to Chat</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <!-- Chat list container -->
        <div class="chat-list-container" style="border: 1px solid #dee2e6; padding: 10px; border-radius: 5px; max-height: 400px; overflow-y: auto;">
          <!-- Chats will be populated here -->
          <p class="text-muted text-center my-3">Your chats will appear here.</p>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Event Handler Script (placed outside the loop) -->
<script>
  $(function () {
    var selectedTid;

    // Handle "Share Post to Chat" button click
    $(document).on('click', 'button[component="topic/share-to-chat"]', function (e) {
      e.stopPropagation();
      e.preventDefault();

      selectedTid = $(this).data('tid');
      console.log('Selected Topic ID:', selectedTid);

      // Open the modal
      $('#shareToChatModal').modal('show');

      // Fetch user's chats
      fetchUserChats();
    });

    // Function to fetch user's chats
    function fetchUserChats() {
      var chatListContainer = $('.chat-list-container');
      chatListContainer.html('<p class="text-muted text-center my-3">Loading your chats...</p>');

      if (!app.user || !app.user.uid) {
        chatListContainer.html('<p class="text-muted text-center my-3">You must be logged in to view your chats.</p>');
        return;
      }

      $.ajax({
        url: config.relative_path + '/api/user/' + app.user.userslug + '/chats',
        method: 'GET',
        success: function (data) {
          if (data && data.rooms && data.rooms.length > 0) {
            populateChatList(data.rooms);
          } else {
            chatListContainer.html('<p class="text-muted text-center my-3">You have no chats.</p>');
          }
        },
        error: function (err) {
          console.error('Error fetching chats:', err);
          chatListContainer.html('<p class="text-danger text-center my-3">Unable to fetch your chats.</p>');
        }
      });
    }

    // Function to populate the chat list in the modal
    function populateChatList(rooms) {
      var chatListContainer = $('.chat-list-container');
      chatListContainer.empty();

      var listGroup = $('<ul class="list-group"></ul>');
      rooms.forEach(function (room) {
        var chatName = room.roomName || room.usernames.join(', ');

        var listItem = $('<li class="list-group-item d-flex justify-content-between align-items-center"></li>');
        listItem.text(chatName);

        var shareButton = $('<button class="btn btn-primary btn-sm">Share</button>');
		shareButton.on('click', function () {
			var topicId = selectedTid;  // Use the selected topic ID
			fetchTopicTitle(topicId, function(topicTitle) {
				sharePostToChat(room.roomId, topicId, topicTitle);  // Pass both topicId and topicTitle
			});
		});


        listItem.append(shareButton);
        listGroup.append(listItem);
      });

      chatListContainer.append(listGroup);
    }
// Function to send the post content to the chat room via POST request
function sendPostToChat(roomId, postContent) {
    var csrfToken = config.csrf_token;  // Assuming CSRF token is available in the config

    $.ajax({
        url: config.relative_path + '/api/v3/chats/' + roomId,  // Assuming API v3
        method: 'POST',
        contentType: 'application/json',
        headers: {
            'x-csrf-token': csrfToken // Add CSRF token to the request headers
        },
        data: JSON.stringify({
            message: postContent
        }),
        success: function (data) {
            console.log('Message sent successfully to Room ID:', roomId);
            // Close the modal after sending
            $('#shareToChatModal').modal('hide');
        },
        error: function (err) {
            console.error('Error sending message to chat room:', err);
        }
    });
}

// Function to share the post to the selected chat
function sharePostToChat(roomId, tid, title) {
    var postLink = 'http://localhost:4567' + '/topic/' + tid;
    var postContent = 'Check out this topic: "' + title + '", ID: ' + tid + '. Here is the link: ' + postLink;

    console.log('Sharing to Room ID:', roomId);
    console.log('Post Content:', postContent);

    // Send the post content to the chat room
    sendPostToChat(roomId, postContent);
}

function fetchTopicTitle(tid, callback) {
    $.ajax({
        url: config.relative_path + '/api/topic/' + tid,  // NodeBB API to fetch topic details
        method: 'GET',
        success: function (data) {
            if (data && data.title) {
                callback(data.title);  // Return the title via the callback
            } else {
                callback("Unknown Topic");
            }
        },
        error: function (err) {
            console.error('Error fetching topic title:', err);
            callback("Unknown Topic");
        }
    });
}
###

 });
</script>